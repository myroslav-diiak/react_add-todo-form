{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","id","completed","classNames","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","todosWithUsers","currentUser","App","useState","todosList","setTodosList","selectedUser","setSelectedUser","titleValue","setTitleValue","submitTouched","setSubmitTouched","onFormSubmit","event","preventDefault","Math","max","action","method","onSubmit","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a22d0648.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { TodoWithUser } from './types/TodoWithUser';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst findUserById = (userId: number) => (\n  usersFromServer.find(user => user.id === userId) || null\n);\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map(todo => {\n  const currentUser = findUserById(todo.userId);\n\n  return {\n    ...todo,\n    user: currentUser,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<TodoWithUser[]>(todosWithUsers);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [titleValue, setTitleValue] = useState('');\n  const [submitTouched, setSubmitTouched] = useState(false);\n\n  const resetInputs = () => {\n    setTitleValue('');\n    setSelectedUser(0);\n    setSubmitTouched(false);\n  };\n\n  const onFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!selectedUser || !titleValue) {\n      setSubmitTouched(true);\n    } else {\n      setTodosList(\n        [\n          ...todosList,\n          {\n            id: Math.max(...todosList.map(todo => todo.id)) + 1,\n            title: titleValue,\n            completed: false,\n            userId: selectedUser,\n            user: findUserById(selectedUser),\n          },\n        ],\n      );\n\n      resetInputs();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => onFormSubmit(event)}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleValue}\n            onChange={(event) => setTitleValue(event.target.value)}\n          />\n          {(!titleValue && submitTouched) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => setSelectedUser(+event.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {(submitTouched && !selectedUser) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}